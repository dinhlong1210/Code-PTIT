Cho mảng A[] gồm n phần tử, hãy tìm cặp phần tử có tổng gần nhất so với 0.

Input:

Dòng đầu tiên đưa vào số lượng bộ test T.
Những dòng kế tiếp đưa vào các bộ test. Mỗi bộ test gồm hai dòng: dòng thứ nhất đưa vào n là số phần tử của mảng A[]; dòng tiếp theo đưa vào n số A[i]; các số được viết cách nhau một vài khoảng trống.
T, n, A[i] thỏa mãn ràng buộc: 1≤T≤100; 2≤N ≤103, -106≤A[i] ≤106.



Cach1: #include<bits/stdc++.h>

using namespace std;
bool compare(int x, int y) 
{ 
    return abs(x) < abs(y); 
} 
  
void findMinSum(int arr[], int n) 
{ 
    sort(arr, arr + n, compare); 
    int min = INT_MAX, x, y; 
    for (int i = 1; i < n; i++) { 
        if (abs(arr[i - 1] + arr[i]) <= min) { 
            min = abs(arr[i - 1] + arr[i]); 
            x = i - 1; 
            y = i; 
        } 
    } 
    cout<< arr[x] + arr[y]<<endl; 
} 
int main(){
	int t;
	cin>>t;
	while(t--){
		int n;
		cin>>n;
		int a[n];
		for(int i=0;i<n;i++){
			cin>>a[i];
		}
		findMinSum(a,n);
	}
}

Cach2:
#include<bits/stdc++.h>

using namespace std;

int main(){
	int t;
	cin>>t;
	while(t--){
		int n;
		cin>>n;
		int a[n];
		for(int i=0;i<n;i++){
			cin>>a[i];
		}
		int min=abs(a[0]+a[1]);
		int x=0,y=0;
		for(int i=0;i<n;i++){
			for(int j=i+1;j<n;j++){
				int temp=abs(a[i]+a[j]);
				if(temp<min) 
				{
				min=temp;
				x=a[i];
				y=a[j];
				}
			}
		}
		cout<<x+y<<endl;
	}
}
